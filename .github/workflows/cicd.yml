name: CI/CD
run-name: based-db CI/CD ðŸš€
on:
  workflow_dispatch:
    inputs:
      skip-tests:
        description: 'Skip Tests'
        default: false
        type: boolean
  workflow_call:
    inputs:
      skipTests:
        default: false
        type: boolean
  pull_request:
    branches:
      - main
    types: ['opened', 'edited', 'reopened', 'synchronize', 'ready_for_review']
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
jobs:
  build-selva:
    name: Build and Test Selvad
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Try selvad build cache
        id: cache-selvad-try
        uses: actions/cache/restore@v3
        with:
          lookup-only: true
          path: |
            packages/server/selvad/local
          key: ${{ runner.os }}-selvad-${{ hashFiles('selvad') }}
      - name: Install gcc
        if: ${{ steps.cache-selvad-try.outputs.cache-hit != 'true' }}
        run: |
         sudo apt update
         sudo apt install gcc-13
      - name: Use Node.js
        if: ${{ steps.cache-selvad-try.outputs.cache-hit != 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Build selva
        if: ${{ steps.cache-selvad-try.outputs.cache-hit != 'true' }}
        run: npm run build-c
        env:
         CC: gcc-13
      # - name: Test selva
      #   if: ${{ steps.cache-selvad-try.outputs.cache-hit != 'true' }}
      #   run: |
      #     cd selvad
      #     make test
      #     cd ..
      - name: Save selvad build cache
        if: ${{ steps.cache-selvad-try.outputs.cache-hit != 'true' }}
        id: cache-selvad-save
        uses: actions/cache/save@v3
        with:
          path: |
            packages/server/selvad/local
          key: ${{ steps.cache-selvad-try.outputs.cache-primary-key }}
  run-tests:
    name: Run ${{ matrix.tests[0] }}/${{ matrix.tests[1] }} tests
    if: ${{ inputs.skip-tests == false }}
    needs: build-selva
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests:
          - ["packages/client","test/*.ts"]
          - ["packages/client", "test/schema/*.ts"]
          - ["packages/client", "test/subs/*.ts"]
          - ["packages/client", "test/indexing/*.ts"]
          - ["packages/schema", "test/*.ts"]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Restore selvad build cache
        id: cache-selvad-try
        uses: actions/cache/restore@v3
        with:
          path: |
            packages/server/selvad/local
          key: ${{ runner.os }}-selvad-${{ hashFiles('selvad') }}
      - name: Restore node_modules
        id: cache-npm-try
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.cache-npm-try.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build based-db
        run: npm run build
      - name: Run tests
        run: |
          cd ${{ matrix.tests[0] }}
          npm run test-ci -- ${{ matrix.tests[1] }}
