name: Release
run-name: based-db CI/CD Release ðŸš€
on:
  workflow_dispatch:
    inputs:
      version:
        description: Release version (starts with `v`)
        required: true
        type: string
      notes:
        description: Release notes
        type: string
jobs:
  build-selva:
    uses: './.github/workflows/cicd.yml'
    with:
      skip-tests: false
  release-binaries:
    name: Release ${{inputs.version}} binaries
    needs: build-selva
    runs-on: ubuntu-latest
    steps:
      - name: Check version
        if: ${{ !inputs.version }}
        run: |
          echo "No version provided on inputs"
          exit 1
      - uses: actions/checkout@v4
      - name: Restore selvad build cache
        id: cache-selvad-try
        uses: actions/cache/restore@v3
        with:
          path: |
            packages/server/selvad/local
          key: ${{ runner.os }}-selvad-${{ hashFiles('selvad') }}
          fail-on-cache-miss: true
      - name: Tar release files
        run: |
          tar -czf Linux_x86_64.tar.gz -C packages/server/selvad/local .
      - name: Create release
        run: |
          gh release create ${{inputs.version}} --title ${{inputs.version}} --target ${{github.ref}} Linux_x86_64.tar.gz --notes "${{inputs.notes}}" --draft --prerelease
        env:
          GH_TOKEN: ${{ github.token }}
  publish-npm:
    name: Publish ${{inputs.version}} npm packages
    needs: build-selva
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Restore selvad build cache
        id: cache-selvad-try
        uses: actions/cache/restore@v3
        with:
          path: |
            packages/server/selvad/local
          key: ${{ runner.os }}-selvad-${{ hashFiles('selvad') }}
          fail-on-cache-miss: true
      - name: Restore node_modules
        id: cache-npm-try
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.cache-npm-try.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build based-db
        run: npm run build
      - name: Update client version
        run: |
          cd packages/client
          npm version --no-git-tag-version ${{inputs.version}}
          cd ../..
      - name: Publish client package
        run: |
          cd packages/client
          npm publish --access=public
          cd ../..
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Move local binaries to Linux_x86_64
        run: |
          mv packages/server/selvad/local packages/server/selvad/Linux_x86_64
      - run: |
          ls -la packages/server/selvad
      - name: Update server version
        run: |
          cd packages/server
          npm version --no-git-tag-version ${{inputs.version}}
          cd ../..
      - name: Publish server package
        run: |
          cd packages/server
          npm publish --access=public
          cd ../..
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit and push changes
        run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'dev@saulx.com'
          git commit -am "CI/CD update package.json files"
          git push
  tag-version:
    name: Create tag for ${{inputs.version}}
    needs:
      - release-binaries
      - publish-npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Create Tag
        run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'dev@saulx.com'
          git tag ${{ inputs.version }}
          git push --tags
